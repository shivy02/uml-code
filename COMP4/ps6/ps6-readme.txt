/**********************************************************************
 *  readme.txt template                                                   
 *  Random Writer 
 **********************************************************************/

Name: Shivam Patel

Hours to complete assignment: 9
/**********************************************************************
 *  Briefly discuss the assignment itself and what you accomplished.
 **********************************************************************/
This assignment required us to create a Markov Model of order k and use 
it to predict text based off of a sample text and generate an output string.
This output string was generated by taking a fixed number of characters and
analyzing it to create a probabalistic model of the text. Everything worked
and my code passed all of the test so it was successful.



  /**********************************************************************
 *  Discuss one or more key algorithms, data structures, or 
 *  OO designs that were central to the assignment.
 **********************************************************************/
On key data structure used was a map. This was used to store the kgram.




/**********************************************************************
 *  Briefly explain the workings of the features you implemented.
 *  Include code excerpts.
 **********************************************************************/
I used a map to store the kgram.

  for (x = order; x <= order + 1; x++) {
    for (y = 0; y < text_size; y++) {
      tmp_str.clear();
      tmp_str = text2.substr(y, x);
      kgrams.insert(std::pair<std::string, int>(tmp_str, 0));
    }
  }




/**********************************************************************
 *  Did you complete the whole assignment?
 *  Successfully or not? 
 *  Indicate which parts you think are working, and describe
 *    how you know that they're working.
 **********************************************************************/
Yes I completed the whole assignment.



/**********************************************************************
 *  Does your implementation pass the unit tests?
 *  Indicate yes or no, and explain how you know that it does or does not.
 **********************************************************************/
Yes my implementation passes all of the tests therefore it works.



 /**********************************************************************
 *  Describe where you used exceptions. 
 *  Provide files and lines of the code.
 ***********************************************************************/
I used exceptions in the freq functions in order to check if the kgram was
of size k.

/**********************************************************************
 *  Did you implemented program for extra poits? If yes, describe your 
 *  If yes, describe your implementation.
 ***********************************************************************/
No


/**********************************************************************
 *  List whatever help (if any) you received from lab TAs,
 *  classmates, or anyone else.
 **********************************************************************/
Stack OvberFlow, Discord, classmates


/**********************************************************************
 *  Describe any serious problems you encountered.                    
 **********************************************************************/
None


/**********************************************************************
 *  List any other comments here.                                     
 **********************************************************************/
None